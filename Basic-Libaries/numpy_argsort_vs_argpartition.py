# -*- coding: utf-8 -*-
"""Numpy-ArgSort-vs-Argpartition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EEyhQI49HKsxyecMYjZ8fDiNr9RSjbz5
"""

import numpy as np
arr = np.array([4, 5, 6, 7, 1, 2, 3, 9, 10, 11, 12,])
idx=np.argsort(arr)
idx

print(f'indices: {idx}')
print(f'smallest 3 elements: {arr[idx[:3]]}')

# Commented out IPython magic to ensure Python compatibility.
# %%timeit
# xs = np.random.normal(size=56000)
# np.argsort(xs)[:10]

import numpy as np
a = np.array([3, 1, 2])

np.argsort(a, axis=-1, kind='quicksort', order=None)

import numpy as np

arr = np.array([3, 1, 2])
indices = np.argsort(arr)
sorted_arr = arr[indices]
print(sorted_arr)

#argpartition
idx = np.argpartition(a = arr, kth = 3)
print(f'indices: {idx}')
print(f'smallest 3 elements: {arr[idx[:3]]}; ⬅️ notice the order')

# Commented out IPython magic to ensure Python compatibility.
# %%timeit
# xs = np.random.normal(size=56000)
# np.argpartition(xs, 10)[:10]

np.argpartition(a, kth, axis=-1, kind='introselect', order=None)

import numpy as np

arr = np.array([3, 1, 4, 2, 5])
k = 3
indices = np.argpartition(arr, k)
smallest_k = arr[indices[:k]]
print(smallest_k)